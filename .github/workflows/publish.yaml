name: Publish

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  REPOSITORY: kummerkasten-deployment
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          platforms: linux/${{ matrix.arch }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}

      - name: Show Docker Image
        run: docker images

      - name: Save Docker Image to tar File
        run: docker save ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }} -o ${{ env.REPOSITORY }}-${{ matrix.arch }}.tar

      - name: Load Docker Image
        run: docker load < ${{ env.REPOSITORY }}-${{ matrix.arch }}.tar

      - name: Show Docker Image
        run: docker images

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Docker image
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}

  manifest:
    name: Create Docker Manifest
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Docker Manifest
        run: |
          docker manifest create \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
